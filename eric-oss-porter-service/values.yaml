# Default values for eric-oss-porter-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
persistentVolumeClaim:
  size: 20Gi

networkPolicy:
  enabled: true

global:
 pullSecret: k8s-registry-secret
 networkPolicy:
  enabled: true
#  timezone: UTC
 registry:
  imagePullPolicy:
#    url: armdocker.rnd.ericsson.se
#  # Secret must be manually created in the namespace, no default value
     # security:
     #    tls:
        #      enabled: true
#    policyBinding:
#      create: false
#    policyReferenceMap:
#      default-restricted-security-policy: "default-restricted-security-policy"


global:
 networkPolicy:
  enabled: true
#  timezone: UTC
 registry:
  imagePullPolicy:
#    url: armdocker.rnd.ericsson.se
#  # Secret must be manually created in the namespace, no default value
 pullSecret:
#  security:
#    tls:
#      enabled: true
#    policyBinding:
#      create: false
#    policyReferenceMap:
#      default-restricted-security-policy: "default-restricted-security-policy"

productInfo:
  # R-State of the product. R State should match helm chart version (3.1.0 -> R2A)
  # To automate it when packaging the helm chart rstate can be generated
  # and below value replaced with correct R-Statei by e.g. Bob
  rstate: R1A

# imageCredentials:
#   repoPath: REPO_PATH
#   pullPolicy: IfNotPresent
#   registry:
#     url:

imageCredentials:
  # repoPath include the image path relative to the registry url, excluding image name
  pullSecret:
  mainImage:
    repoPath:
    registry:
      imagePullPolicy:
      url:

# images
images:
  restsim:
    name: eric-oss-porter-service
    tag:

replicaCount: 1

image1:
  repository: armdocker.rnd.ericsson.se/proj_oss_releases/enm/eric-oss-user-management
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "vtest4"

image2:
  repository: armdocker.rnd.ericsson.se/proj_oss_releases/enm/eric-oss-communication
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "vtest10"

image3:
  repository: armdocker.rnd.ericsson.se/proj_oss_releases/enm/eric-oss-restsim-offerings
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "vtest31"

image4:
  repository: armdocker.rnd.ericsson.se/proj_oss_releases/enm/eric-oss-porter-insights
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# pullSecret:
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

postgres:
    idleconnections: 10
    lifetime: 5

maxhttpclients:
    maxclients: 50

database:
  name: restsim_portal
  port: 5432
  user: restsim
  password: restsim
  host: eric-oss-porter-postgres
  retries: 12
  timeout: 10

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity: "soft"

env:

  metrics:
    port: 9798
  # Tracing configuration
  trace:
    ## Control enabling of tracing, default false
    enabled: false
    ## tags, key value pairs. The tags will be applied to the tracer and will be shown in UI process section.
    ## Example: service=service-a, version=1.0.1
    tags:
    # Only supports jaeger exporter
    agent:
      host: eric-dst-agent
      port: 6831
    sampler:
      # Allowed values:
      # always_on,
      # always_off,
      # traceidratio
      # parentbased_always_off,
      # parentbased_always_on,
      # parentbased_traceidratio
      # jaeger_remote
      # , parentbased_jaeger_remote
      # Mirrors OTEL_TRACES_SAMPLER
      type: always_on
      # Mirrors OTEL_TRACES_SAMPLER_ARG
      # The value dependents on the type
      # For traceidratio -> float in [ 0.0 - 1 ]
      # For jaeger_remote -> endpoint=http://localhost:14250,pollingIntervalMs=5000,initialSamplingRate=0.25
      # See, https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/sdk-environment-variables.md
      #  Examples:
      #  type: traceidratio
      #  args: 0.9
      #  type: jaeger_remote
      #  args: "endpoint=http://eric-dst-agent:5778,pollingIntervalMs,initialSamplingRate=1"
      args: 1
    logLevel: info

probes:
  maincontainer:
    livenessProbe:
      initialDelaySeconds: 1
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 3
    readinessProbe:
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
service1:
  name: eric-oss-user-management
  type: LoadBalancer
  port: 8081
  LoadBalancerIP: "214.6.22.86"
service2:
  name: eric-oss-communications
  type: LoadBalancer
  port: 8082
  LoadBalancerIP: "214.6.22.86"
service3:
  name: eric-oss-restsim-offerings
  type: LoadBalancer
  port: 8083
  LoadBalancerIP: "214.6.22.86"

ingress:
  enabled: false
  # Ingress class name indicates which ingress controller instance will consume
  # the ingress resource. Required for HTTP traffic separation
  #ingressClass: ff-ingress-class
  ingressClass: ""
  annotations: {}
  # DNS name of the service.
  hostname: "restsimportal.flexilab.seli.gic.ericsson.se"
  tls:
    # If TLS cannot be terminating at Ingress controller, setting the parameter
    # will bypass the traffic and TLS will be terminated at the backend service.
    passthrough: false
    secretName: ""

resources:
  restsim:
   default:
    limits:
      cpu: "1"
      memory: "1Gi"
      ephemeral-storage: "2Gi"
    requests:
      cpu: "2m"
      memory: "4Mi"
      ephemeral-storage: "4Mi"

podDisruptionBudget:
  minAvailable: 50%

terminationGracePeriodSeconds: 30

probes:
  maincontainer:
    livenessProbe:
      initialDelaySeconds: 1
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 3
    readinessProbe:
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3

podPriority:
  priorityClassName: ""

eric-oss-porter-postgres:
  enabled: true
  global:
      security:
          tls:
              enabled: False
  postgresDatabase: restsim_portal
  credentials:
      kubernetesSecretName: eric-oss-porter-postgres-pg-secret
